name: Rust Cross-Compile for Windows (GNU)  
  
on:  
  release:  
    types: [created]  
  
jobs:  
  build:  
    name: Cross-Compile Rust Project for Windows (GNU)  
    runs-on: ubuntu-latest  
    steps:  
      - name: Checkout Code  
        uses: actions/checkout@v2  
      - name: Install Rust  
        uses: actions-rs/toolchain@v1  
        with:  
          toolchain: stable  
          target: x86_64-pc-windows-gnu  
          override: true  
      - name: Install mingw-w64  
        run: sudo apt-get install mingw-w64  
      - name: Build Project  
        uses: actions-rs/cargo@v1  
        with:  
          command: build  
          args: --release --target x86_64-pc-windows-gnu  
      - name: Upload Artifact  
        uses: actions/upload-artifact@v2  
        with:  
          name: rust-binary-windows-gnu  
          path: target/x86_64-pc-windows-gnu/release/*.exe
      - name: Upload Release Asset  
        id: upload-release-asset   
        uses: actions/upload-release-asset@v1  
        env:  
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        with:  
          upload_url: ${{ github.event.release.upload_url }} # This pulls from the CREATE event payload, where the Release was created  
          asset_path: ./target/x86_64-pc-windows-gnu/release/*.exe # Path to your asset  
          asset_name: macgui # Name you want to give the released asset  
          asset_content_type: application/octet-stream # Required, but this is a common content type
